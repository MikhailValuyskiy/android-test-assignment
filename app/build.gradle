plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
}

def tokenPropertiesFile = rootProject.file("token.properties")
def tokenProperties = new Properties()
tokenProperties.load(new FileInputStream(tokenPropertiesFile))

android {
    namespace 'com.example.shacklehotelbuddy'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.shacklehotelbuddy"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        buildConfigField 'String', 'TOKEN', tokenProperties['TOKEN']

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildFeatures {
        buildConfig = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // TODO replace by real production URL
            buildConfigField "String", 'BASE_URL', "\"https://hotels4.p.rapidapi.com/\""

            // TODO replace it by release signing configs for future release
            signingConfig signingConfigs.debug
        }

        debug {
            // Can be useful for different build variants. E.g. for test and release
            buildConfigField "String", 'BASE_URL', "\"https://hotels4.p.rapidapi.com/\""
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        allWarningsAsErrors = false
        freeCompilerArgs += [
                '-opt-in=androidx.compose.material3.ExperimentalMaterial3Api'
        ]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

ext {
    core_ktx = '1.10.1'
    material_version = '1.9.0'

    glide_version = '4.15.1'
    glide_transform = '4.3.0'
    glide_compose = '1.0.0-alpha.1'

    dagger_version = '2.46.1'
    appcompat_version = '1.6.1'
    navigation_version = '2.6.0'
    swiperefreshlayout_version = '1.1.0'

    rx_version = '2.2.21'
    rxandroid_version = '2.1.1'
    rx_adapter = '2.9.0'

    retrofit_version = '2.9.0'
    okhttp_version = '4.11.0'

    mockito_inline = '4.0.0'
    mockito_kotlin = '2.2.0'
    junit_ktx_version = '1.1.5'

    espresso_core = '3.5.1'
    core_testing = '2.2.0'

    robolectric_version = '4.9.2'
    junit_version = '4.13.2'
    test_core_ktx = '1.5.0'

    room = '2.5.2'
}

dependencies {
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Networking
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rx_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rx_adapter"

    // DI
    implementation 'com.google.dagger:hilt-android:2.45'
    androidTestImplementation project(path: ':app')
    kapt 'com.google.dagger:hilt-android-compiler:2.45'
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    // Navigation
    implementation 'androidx.navigation:navigation-compose:2.7.4'
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"

    implementation "androidx.compose.material3:material3:1.2.0-alpha09"

    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation "jp.wasabeef:glide-transformations:$glide_transform"
    implementation "com.github.bumptech.glide:compose:$glide_compose"

    // Room
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"
    implementation "androidx.room:room-ktx:$room"

}